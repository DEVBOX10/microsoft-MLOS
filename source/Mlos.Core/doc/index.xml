<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MLOS</title>
    <link>https://microsoft.github.io/MLOS/source/Mlos.Core/doc/</link>
    <description>Recent content on MLOS</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://microsoft.github.io/MLOS/source/Mlos.Core/doc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://microsoft.github.io/MLOS/source/Mlos.Core/doc/SharedChannel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://microsoft.github.io/MLOS/source/Mlos.Core/doc/SharedChannel/</guid>
      <description>MLOS Shared Channel This document describes the implementation details of the mechanism (a shared memory communication channel) used for a target system to communicate with an external agent for tuning it.
For additional context, please see the MlosArchitecture.md documentation.
Contents  MLOS Shared Channel  Shared Channel  Principles: Circular buffer algorithm  Writer Reader Writer continued Reader continued Cyclic buffer handling   Scaling out readers   Shared channel implementation  Diagram Policies Notes Links      Shared Channel A shared channel is a one-directional communication channel based on a single shared memory block (i.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://microsoft.github.io/MLOS/source/Mlos.Core/doc/SharedMemoryManagement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://microsoft.github.io/MLOS/source/Mlos.Core/doc/SharedMemoryManagement/</guid>
      <description>MemoryRegion SharedMemoryView @import &amp;ldquo;./images/SharedMemoryManagement.svg&amp;rdquo; {width=&amp;quot;1400px&amp;rdquo; height=&amp;quot;1000px&amp;rdquo; title=&amp;quot;Shared memory regions&amp;rdquo;}</description>
    </item>
    
  </channel>
</rss>